#
# John Shutt's "Kernel" Language core
#

LET Symbol(name) = \(cust, req).[
	CASE req OF
	(#eval, env) : [ SEND (cust, #lookup, SELF) TO env ]
	_ : [ THROW (#Not-Understood, SELF, req) ]
	END
]
LET Pair(left, right) = \(cust, req).[
	CASE req OF
	(#eval, env) : [
		SEND (k_comb, #eval, env) TO left
		CREATE k_comb WITH \comb.[
			SEND (cust, #comb, right, env) TO comb
		]
	]
	_ : [ THROW (#Not-Understood, SELF, req) ]
	END
]
CREATE Nil WITH \(cust, req).[
	CASE req OF
	(#eval, _) : [ SEND SELF TO cust ]
	_ : [ THROW (#Not-Understood, SELF, req) ]
	END
]
